"use strict";
(self["webpackChunkRasad"] = self["webpackChunkRasad"] || []).push([["default-node_modules_ngx-lottie_fesm2015_ngx-lottie_mjs"],{

/***/ 8530:
/*!*********************************************************!*\
  !*** ./node_modules/ngx-lottie/fesm2015/ngx-lottie.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimationLoader": () => (/* binding */ AnimationLoader),
/* harmony export */   "BaseDirective": () => (/* binding */ BaseDirective),
/* harmony export */   "LottieCacheModule": () => (/* binding */ LottieCacheModule),
/* harmony export */   "LottieComponent": () => (/* binding */ LottieComponent),
/* harmony export */   "LottieDirective": () => (/* binding */ LottieDirective),
/* harmony export */   "LottieModule": () => (/* binding */ LottieModule),
/* harmony export */   "LottieTransferState": () => (/* binding */ LottieTransferState),
/* harmony export */   "transformAnimationFilenameToKey": () => (/* binding */ transformAnimationFilenameToKey)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 9346);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 745);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 8184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 6317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 1954);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 833);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 635);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 9337);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 9196);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 8728);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 116);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 2673);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 8951);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/platform-browser */ 318);








const _c0 = ["container"];
const LOTTIE_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('LottieOptions');

function convertPlayerOrLoaderToObservable(player, useWebWorker) {
  const playerOrLoader = player();
  const player$ = playerOrLoader instanceof Promise ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.from)(playerOrLoader).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(module => module.default || module)) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(playerOrLoader);
  return player$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.tap)(player => player.useWebWorker(useWebWorker)), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.shareReplay)({
    bufferSize: 1,
    refCount: true
  }));
}

class AnimationLoader {
  constructor(ngZone, options) {
    this.ngZone = ngZone;
    this.options = options;
    this.player$ = convertPlayerOrLoaderToObservable(this.options.player, this.options.useWebWorker).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.observeOn)(rxjs__WEBPACK_IMPORTED_MODULE_7__.animationFrameScheduler));
  }

  loadAnimation(options) {
    return this.player$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(player => this.createAnimationItem(player, options)));
  }

  resolveOptions(options, container) {
    return Object.assign({
      container,
      renderer: 'svg',
      loop: true,
      autoplay: true
    }, options);
  }

  createAnimationItem(player, options) {
    return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));
  }

}
/** @nocollapse */


AnimationLoader.ɵfac = function AnimationLoader_Factory(t) {
  return new (t || AnimationLoader)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](LOTTIE_OPTIONS));
};
/** @nocollapse */


AnimationLoader.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: AnimationLoader,
  factory: AnimationLoader.ɵfac
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AnimationLoader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [LOTTIE_OPTIONS]
      }]
    }];
  }, null);
})();

class BaseDirective {
  constructor(ngZone, platformId, animationLoader) {
    this.ngZone = ngZone;
    this.platformId = platformId;
    this.animationLoader = animationLoader;
    this.options = null;
    this.containerClass = null;
    this.styles = null;
    /**
     * `animationCreated` is dispatched after calling `loadAnimation`.
     */

    this.animationCreated = this.getAnimationItem();
    /**
     * `complete` is dispatched after completing the last frame.
     */

    this.complete = this.awaitAnimationItemAndStartListening('complete');
    /**
     * `loopComplete` is dispatched after completing the frame loop.
     */

    this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');
    /**
     * `enterFrame` is dispatched after entering the new frame.
     */

    this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');
    /**
     * `segmentStart` is dispatched when the new segment is adjusted.
     */

    this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');
    /**
     * Original event name is `config_ready`. `config_ready` is dispatched
     * after the needed renderer is configured.
     */

    this.configReady = this.awaitAnimationItemAndStartListening('config_ready');
    /**
     * Original event name is `data_ready`. `data_ready` is dispatched
     * when all parts of the animation have been loaded.
     */

    this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');
    /**
     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched
     * when elements have been added to the DOM.
     */

    this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');
    /**
     * `destroy` will be dispatched when the component gets destroyed,
     * it's handy for releasing resources.
     */

    this.destroy = this.awaitAnimationItemAndStartListening('destroy');
    /**
     * `error` will be dispatched if the Lottie player could not render
     * some frame or parse config.
     */

    this.error = this.awaitAnimationItemAndStartListening('error');
    this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
    this.loadAnimation$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
    this.animationItem$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.BehaviorSubject(null);
    this.setupLoadAnimationListener();
  }

  ngOnDestroy() {
    this.destroy$.next();
    this.destroyAnimation();
  }

  loadAnimation(changes, container) {
    this.loadAnimation$.next([changes, container]);
  }

  getAnimationItem() {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.defer)(() => this.animationItem$).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.filter)(animationItem => animationItem !== null));
  }

  awaitAnimationItemAndStartListening(name) {
    return this.getAnimationItem().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)(animationItem => // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.
    // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from
    // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`
    // removes event listeners when calling `destroy()`.
    new rxjs__WEBPACK_IMPORTED_MODULE_13__.Observable(observer => {
      this.ngZone.runOutsideAngular(() => {
        animationItem.addEventListener(name, event => {
          this.ngZone.runOutsideAngular(() => {
            observer.next(event);
          });
        });
      });
    })));
  }

  setupLoadAnimationListener() {
    this.loadAnimation$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.filter)(([changes]) => (0,_angular_common__WEBPACK_IMPORTED_MODULE_14__.isPlatformBrowser)(this.platformId) && changes.options !== undefined), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)(([changes, container]) => {
      this.destroyAnimation();
      return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));
    }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(animationItem => {
      this.animationItem$.next(animationItem);
    });
  }

  destroyAnimation() {
    const animationItem = this.animationItem$.getValue(); // The `ng-lottie` component or the `lottie` directive can be destroyed
    // before the `animationItem` is set, thus it will fail with
    // `Cannot read property 'destroy' of null`.
    // Potentially it can happen if the directive gets destroyed before change
    // detection is run.

    if (animationItem === null) {
      return;
    } // `destroy()` will remove all events listeners.


    animationItem.destroy();
    this.animationItem$.next(null);
  }

}
/** @nocollapse */


BaseDirective.ɵfac = function BaseDirective_Factory(t) {
  return new (t || BaseDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};
/** @nocollapse */


BaseDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: BaseDirective,
  selectors: [["", "lottie", ""]],
  inputs: {
    options: "options",
    containerClass: "containerClass",
    styles: "styles"
  },
  outputs: {
    animationCreated: "animationCreated",
    complete: "complete",
    loopComplete: "loopComplete",
    enterFrame: "enterFrame",
    segmentStart: "segmentStart",
    configReady: "configReady",
    dataReady: "dataReady",
    domLoaded: "domLoaded",
    destroy: "destroy",
    error: "error"
  }
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BaseDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lottie]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: AnimationLoader
    }];
  }, {
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    containerClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    styles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    animationCreated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    complete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    loopComplete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    enterFrame: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    segmentStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    configReady: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    dataReady: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    domLoaded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    destroy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();

class LottieDirective extends BaseDirective {
  constructor(ngZone, platformId, host, animationLoader) {
    super(ngZone, platformId, animationLoader);
    this.host = host;
  }

  ngOnChanges(changes) {
    super.loadAnimation(changes, this.host.nativeElement);
  }

}
/** @nocollapse */


LottieDirective.ɵfac = function LottieDirective_Factory(t) {
  return new (t || LottieDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef, 2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};
/** @nocollapse */


LottieDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: LottieDirective,
  selectors: [["", "lottie", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lottie]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Self
      }]
    }, {
      type: AnimationLoader
    }];
  }, null);
})();

class LottieComponent extends BaseDirective {
  constructor(ngZone, platformId, animationLoader) {
    super(ngZone, platformId, animationLoader);
    this.width = null;
    this.height = null;
    this.container = null;
  }

  ngOnChanges(changes) {
    super.loadAnimation(changes, this.container.nativeElement);
  }

}
/** @nocollapse */


LottieComponent.ɵfac = function LottieComponent_Factory(t) {
  return new (t || LottieComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};
/** @nocollapse */


LottieComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: LottieComponent,
  selectors: [["ng-lottie"]],
  viewQuery: function LottieComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.container = _t.first);
    }
  },
  inputs: {
    width: "width",
    height: "height"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 6,
  consts: [[3, "ngStyle", "ngClass"], ["container", ""]],
  template: function LottieComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 0, 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.width || "100%")("height", ctx.height || "100%");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.styles)("ngClass", ctx.containerClass);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgStyle],
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ng-lottie',
      template: `
    <div
      #container
      [style.width]="width || '100%'"
      [style.height]="height || '100%'"
      [ngStyle]="styles"
      [ngClass]="containerClass"
    ></div>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: AnimationLoader
    }];
  }, {
    width: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    height: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['container', {
        static: true
      }]
    }]
  });
})();

class LottieModule {
  static forRoot(options) {
    return {
      ngModule: LottieModule,
      providers: [AnimationLoader, {
        provide: LOTTIE_OPTIONS,
        useValue: options
      }]
    };
  }

}
/** @nocollapse */


LottieModule.ɵfac = function LottieModule_Factory(t) {
  return new (t || LottieModule)();
};
/** @nocollapse */


LottieModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: LottieModule
});
/** @nocollapse */

LottieModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule],
      declarations: [BaseDirective, LottieDirective, LottieComponent],
      exports: [BaseDirective, LottieDirective, LottieComponent]
    }]
  }], null, null);
})();

class CacheableAnimationLoader extends AnimationLoader {
  constructor() {
    super(...arguments);
    this.cache = new Map();
  }

  ngOnDestroy() {
    this.cache.clear();
  }

  loadAnimation(options) {
    return this.player$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(player => {
      const animationItem = this.createAnimationItem(player, this.transformOptions(options));
      this.awaitConfigAndCache(options, animationItem);
      return animationItem;
    }));
  }

  awaitConfigAndCache(options, animationItem) {
    if (this.isAnimationConfigWithPath(options)) {
      // Don't wait for the `config_ready` event if it has been cached previously.
      if (this.cache.has(options.path)) {
        return;
      }

      animationItem.addEventListener('config_ready', () => {
        // See the comments below on why we're storing the animation data as a string.
        this.cache.set(options.path, JSON.stringify(animationItem['animationData']));
      });
    }
  }

  transformOptions(options) {
    if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {
      return Object.assign(Object.assign({}, options), {
        path: undefined,
        // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we
        // have to retrieve a new object each time an animation is created.
        // https://github.com/airbnb/lottie-web#html
        // See comments for the `animationData` property.
        animationData: JSON.parse(this.cache.get(options.path))
      });
    } else {
      return options;
    }
  }

  isAnimationConfigWithPath(options) {
    return typeof options.path === 'string';
  }

}
/** @nocollapse */


CacheableAnimationLoader.ɵfac = /* @__PURE__ */function () {
  let ɵCacheableAnimationLoader_BaseFactory;
  return function CacheableAnimationLoader_Factory(t) {
    return (ɵCacheableAnimationLoader_BaseFactory || (ɵCacheableAnimationLoader_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](CacheableAnimationLoader)))(t || CacheableAnimationLoader);
  };
}();
/** @nocollapse */


CacheableAnimationLoader.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: CacheableAnimationLoader,
  factory: CacheableAnimationLoader.ɵfac
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CacheableAnimationLoader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], null, null);
})();

class LottieCacheModule {
  static forRoot() {
    return {
      ngModule: LottieCacheModule,
      providers: [{
        provide: AnimationLoader,
        useClass: CacheableAnimationLoader
      }]
    };
  }

}
/** @nocollapse */


LottieCacheModule.ɵfac = function LottieCacheModule_Factory(t) {
  return new (t || LottieCacheModule)();
};
/** @nocollapse */


LottieCacheModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: LottieCacheModule
});
/** @nocollapse */

LottieCacheModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieCacheModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule
  }], null, null);
})();

function transformAnimationFilenameToKey(animation) {
  const [animationName] = animation.split('.json');
  return `animation-${animationName}`;
}

class LottieTransferState {
  constructor(transferState) {
    this.transferState = transferState;
  }

  get(animation) {
    const animationKey = transformAnimationFilenameToKey(animation);
    const stateKey = (0,_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.makeStateKey)(animationKey);
    return this.transferState.get(stateKey, null);
  }

}
/** @nocollapse */


LottieTransferState.ɵfac = function LottieTransferState_Factory(t) {
  return new (t || LottieTransferState)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState));
};
/** @nocollapse */


LottieTransferState.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: LottieTransferState,
  factory: LottieTransferState.ɵfac,
  providedIn: 'root'
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieTransferState, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState
    }];
  }, null);
})();
/**
 * The public api for consumers of ngx-lottie
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ })

}]);
//# sourceMappingURL=default-node_modules_ngx-lottie_fesm2015_ngx-lottie_mjs.js.map